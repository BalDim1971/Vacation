##############################################################################################################
'''
Основной запускающий файл.

Определяем переменные для доступа к сайтам.
Получаем от пользователя необходимые данные для поиска.
Выводим на экран полученную информацию
'''
##############################################################################################################

from SuperJobAPI import SuperJobAPI
from HeadHunterAPI import HeadHunterAPI


def user_interaction():
	'''
	Функция взаимодействия с пользователем.
	Вариант первый. Пока шаблон.
	
	1. Получаем с каких платформ получать данные.
	2. Поисковый запрос. Профессия или ключевое слово?
	3. Количество профессий для вывода в топ по зарплате.
	4. Отсортированные вакансии, по какому ключу? и сколько?
	5. Получить вакансии по ключевым словам?
	6. Дать возможность удалить определенные вакансии
	:return:
	'''
	
	# Запросить платформы hh, superjob или обе
	
	# Ключевое слово для поиска
	
	# Количество вывода в топ по зарплате
	
	# Сортируем вакансии, какой ключ?
	
	# Читаем вакансии
	
	# Выводим вакансии на экран
	
	pass
	

def main():
	'''
	Главная функция.
	
	1. Создаем объекты для получения данных с сайтов.
	2. Запрашиваем у пользователя основные данные по вакансии (профессия или ключевое слово?)
	3. Запрос с сайта вакансий данных по пользовательскому вводу
	4. Сохранение полученных данных
	5. Создание объекта для работы с вакансиями
	6. Запрашиваем у пользователя данные по отображению вакансий
	'''
	
	# Создаем объекты
	hh_api = HeadHunterAPI()
	sj_api = SuperJobAPI()
	
	######################################################
	# Вставить блок кода для получения от пользователя
	######################################################
	
	# Получаем вакансии по ключу
	hh_api.get_vacancies('Python')
	sj_api.get_vacancies('Python')
	
	# Сохраняем вакансии
	hh_api.save_vacancies()
	sj_api.save_vacancies()
	
	# Основная работа с пользовательскими данными
	user_interaction()

if __name__ == '__main__':
	main()

##############################################################################################################